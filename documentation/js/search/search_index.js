var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.178,1,1.716]],["body/controllers/AppController.html",[0,1.848,1,2.69,2,1.478,3,0.608,4,0.52,5,0.52,6,2.927,7,0.608,8,1.848,9,4.183,10,1.887,11,0.046,12,0.914,13,3.6,14,1.478,15,1.293,16,1.006,17,1.034,18,2.274,19,2.927,20,0.608,21,0.218,22,2.151,23,1.887,24,1.478,25,3.6,26,0.036,27,0.036]],["title/modules/AppModule.html",[28,1.329,29,1.716]],["body/modules/AppModule.html",[1,2.343,2,1.371,3,0.663,4,0.334,5,0.334,11,0.047,16,1.195,17,0.665,18,2.196,19,1.881,20,0.391,21,0.14,26,0.027,27,0.027,28,1.546,29,3.095,30,1.071,31,1.546,32,1.881,33,1.881,34,1.881,35,2.386,36,2.386,37,1.996,38,1.383,39,1.383,40,2.314,41,2.304,42,2.304,43,2.314,44,0.844,45,2.314,46,0.95,47,2.314,48,1.881,49,1.213,50,2.314,51,0.844,52,2.314,53,1.213,54,2.314,55,2.314,56,2.314,57,1.383,58,2.704,59,3.34,60,2.314,61,3.701,62,3.34,63,2.314,64,2.314,65,2.314,66,2.314,67,2.314,68,2.314,69,2.314,70,2.314,71,1.881,72,2.314,73,2.314,74,2.314,75,2.25,76,3.92,77,3.92,78,3.92,79,2.314,80,3.92,81,2.314,82,3.34,83,2.314,84,2.314,85,1.881,86,2.314,87,2.314,88,2.314]],["title/injectables/AppService.html",[18,1.329,89,1.178]],["body/injectables/AppService.html",[3,0.638,4,0.546,5,0.546,7,0.638,8,1.903,9,4.254,11,0.045,12,0.959,14,1.55,15,1.332,16,0.844,17,1.085,18,2.147,20,0.638,21,0.228,24,1.55,26,0.037,27,0.037,89,1.903,90,2.257,91,3.07,92,3.777,93,3.777,94,3.777]],["title/modules/AuthModule.html",[28,1.329,35,1.505]],["body/modules/AuthModule.html",[2,1.378,3,0.567,4,0.485,5,0.485,11,0.046,16,1.062,17,0.964,20,0.567,21,0.203,26,0.035,27,0.035,28,1.994,30,1.554,31,1.994,35,2.782,37,2.574,38,2.007,39,2.007,41,2.971,42,2.316,95,2.73,96,2.73,97,2.782,98,3.358,99,4.308,100,2.007,101,3.358,102,3.358,103,3.358,104,2.316,105,3.358,106,2.73,107,3.358,108,3.358,109,3.358]],["title/entities/Book.html",[51,1.047,110,1.98]],["body/entities/Book.html",[3,0.365,4,0.312,5,0.312,7,0.365,10,2.575,11,0.046,12,1.247,15,1.502,16,0.71,20,0.365,21,0.131,26,0.026,27,0.026,51,1.159,110,2.192,111,1.49,112,1.756,113,1.471,114,1.745,115,1.547,116,2.253,117,1.975,118,2.253,119,2.253,120,2.253,121,2.253,122,1.411,123,3.994,124,2.583,125,3.194,126,2.16,127,2.16,128,2.583,129,2.583,130,2.192,131,2.583,132,2.583,133,3.379,134,3.379,135,3.379,136,3.064,137,3.178,138,2.16,139,2.16,140,2.16,141,2.178,142,2.16,143,2.16,144,2.16,145,2.16,146,2.16,147,2.16,148,2.16,149,2.16,150,2.16,151,2.16,152,4.076,153,1.291,154,4.788,155,3.178,156,1.49,157,3.994,158,2.16,159,1.756,160,1.756,161,1.756,162,1.756,163,1.756]],["title/classes/BookDto.html",[21,0.174,164,1.329]],["body/classes/BookDto.html",[3,0.365,4,0.312,5,0.312,7,0.365,10,2.509,11,0.046,12,1.247,15,1.502,16,0.483,20,0.365,21,0.131,23,2.93,26,0.026,27,0.026,113,1.471,114,1.745,115,1.547,116,2.253,117,1.975,118,2.253,119,2.253,120,2.253,121,2.253,122,1.411,123,3.892,124,2.583,125,3.194,128,2.583,129,2.583,130,2.192,131,2.583,132,2.583,133,3.379,134,3.379,135,3.379,136,3.379,141,2.178,152,3.994,153,1.291,157,3.892,159,2.583,160,2.583,161,2.583,162,2.583,163,2.583,164,1.471,165,1.132,166,1.756,167,2.16,168,2.16,169,2.16,170,2.16,171,2.16,172,2.16,173,2.16,174,2.16]],["title/controllers/BooksController.html",[0,1.178,46,1.178]],["body/controllers/BooksController.html",[0,0.418,2,0.418,3,0.294,4,0.147,5,0.147,7,0.172,8,0.715,10,1.59,11,0.046,12,0.84,14,1.358,15,1.117,16,0.901,17,0.293,20,0.172,21,0.062,22,0.609,23,0.534,24,1.246,26,0.014,27,0.014,44,0.832,46,0.715,51,1.515,57,0.609,58,1.201,61,0.828,100,0.609,106,0.828,115,1.751,117,1.196,122,1.278,125,1.862,130,2.569,141,1.196,153,0.609,164,1.636,175,0.828,176,0.828,177,0.828,178,3.123,179,1.574,180,1.574,181,1.201,182,1.574,183,1.574,184,1.742,185,1.019,186,4.268,187,2.437,188,4.871,189,1.019,190,1.742,191,3.726,192,1.019,193,1.416,194,3.726,195,4.528,196,1.742,197,1.019,198,1.742,199,1.742,200,1.019,201,1.733,202,1.733,203,1.733,204,2.781,205,1.019,206,2.683,207,1.019,208,1.742,209,2.282,210,2.701,211,1.742,212,1.019,213,0.828,214,1.019,215,1.742,216,2.701,217,1.019,218,1.742,219,2.282,220,1.019,221,1.019,222,1.019,223,1.742,224,1.742,225,1.742,226,1.019,227,1.019,228,1.019,229,1.742,230,1.742,231,1.019,232,1.742,233,4.032,234,1.019,235,3.534,236,1.019,237,1.416,238,0.828,239,0.828,240,1.855,241,0.828,242,2.467,243,0.828,244,1.019,245,1.019,246,1.019,247,1.019,248,1.019,249,3.307,250,3.534,251,1.019,252,0.703,253,1.019,254,2.282,255,0.703,256,0.703,257,0.703,258,1.019,259,0.828,260,1.019,261,1.019,262,0.828,263,1.742,264,3.307,265,1.742,266,1.019,267,4.528,268,1.019,269,1.019,270,1.019,271,1.019,272,1.019,273,1.019,274,1.019,275,0.703,276,3.035,277,3.307,278,0.828,279,4.722,280,2.467,281,1.019,282,3.035,283,3.89,284,2.701,285,3.035,286,0.828,287,2.282,288,2.282,289,1.019,290,2.282,291,2.282,292,2.282,293,1.019,294,1.019,295,0.828,296,1.019,297,1.019,298,0.828,299,0.828,300,1.019]],["title/controllers/BooksController-1.html",[0,0.991,46,0.991,301,1.962]],["body/controllers/BooksController-1.html",[0,0.889,2,0.889,3,0.366,4,0.313,5,0.313,7,0.366,8,1.307,10,2.324,11,0.047,12,1.126,14,1.82,15,1.441,16,1.036,17,0.622,20,0.366,21,0.131,22,1.294,24,1.82,26,0.026,27,0.026,44,1.161,46,1.307,122,1.273,164,2.218,176,1.761,177,1.761,179,2.196,180,2.196,181,2.196,182,2.196,183,2.196,186,3.769,187,3.391,201,2.324,202,2.324,203,2.324,206,3.197,213,1.761,237,3.069,238,1.761,239,1.761,240,3.383,241,1.761,242,1.761,252,1.494,256,1.494,257,1.494,259,1.761,278,1.761,286,2.588,295,2.588,299,2.588,302,1.761,303,1.761,304,2.166,305,1.761,306,2.166,307,2.166,308,1.761,309,2.166,310,1.761,311,2.166,312,1.294,313,2.166,314,1.294,315,2.166,316,2.166,317,2.166,318,2.166,319,2.166,320,2.166,321,2.166,322,2.166,323,2.166,324,2.166,325,2.166]],["title/modules/BooksModule.html",[28,1.329,36,1.505]],["body/modules/BooksModule.html",[2,1.768,3,0.567,4,0.485,5,0.485,11,0.046,16,1.159,17,0.964,20,0.567,21,0.203,26,0.035,27,0.035,28,1.994,30,1.554,31,1.994,36,2.782,37,2.574,38,2.007,39,2.007,41,2.971,42,2.316,44,1.936,46,1.952,48,2.73,49,1.76,51,1.224,255,2.316,257,2.316,326,2.73,327,2.73,328,3.358,329,3.358,330,3.358]],["title/injectables/BooksService.html",[44,1.047,89,1.178]],["body/injectables/BooksService.html",[3,0.354,4,0.303,5,0.303,7,0.354,8,1.276,11,0.046,12,1.163,14,1.796,15,1.429,16,0.977,17,0.602,20,0.354,21,0.127,24,1.796,26,0.025,27,0.025,44,1.133,49,1.099,51,0.764,89,1.276,90,1.253,117,1.941,122,1.256,156,1.446,164,2.195,178,3.684,179,2.143,180,2.143,181,2.143,182,2.143,183,2.143,187,3.017,201,2.401,202,2.401,203,2.401,204,3.491,206,2.554,255,1.446,256,1.446,275,1.446,280,3.33,303,2.526,305,2.526,308,2.526,310,2.526,331,1.704,332,2.143,333,2.096,334,3.33,335,2.096,336,3.108,337,2.096,338,2.096,339,3.108,340,2.096,341,2.096,342,2.096,343,2.096,344,2.096,345,2.096,346,2.096,347,3.108,348,3.704,349,2.096,350,2.096,351,2.096,352,2.096,353,2.096,354,2.096,355,2.096]],["title/classes/ConfigService.html",[21,0.174,53,1.505]],["body/classes/ConfigService.html",[3,0.394,4,0.337,5,0.337,7,0.394,8,1.379,11,0.046,12,1.094,14,1.617,15,1.49,16,0.751,20,0.394,21,0.141,22,1.394,24,1.617,26,0.027,27,0.027,49,1.223,51,1.225,53,2.259,71,3.503,75,1.761,85,1.896,111,1.609,122,1.366,165,1.223,193,1.896,201,2.064,202,2.064,203,2.064,275,2.716,332,1.609,356,1.609,357,4.757,358,3.36,359,4.31,360,3.36,361,2.333,362,3.36,363,2.333,364,3.36,365,3.36,366,2.333,367,2.333,368,2.333,369,3.939,370,3.36,371,4.31,372,2.333,373,1.896,374,3.503,375,2.333,376,2.333,377,2.333,378,2.333,379,3.36,380,2.333,381,1.896,382,2.333,383,2.333,384,2.333,385,2.333,386,2.333,387,1.896,388,2.333,389,2.333,390,2.333,391,2.333,392,2.333,393,2.333,394,2.333,395,2.333,396,2.333,397,2.333,398,2.333,399,1.896,400,1.896,401,1.896,402,1.896,403,1.896,404,1.896]],["title/classes/CreateBookDto.html",[21,0.174,312,1.716]],["body/classes/CreateBookDto.html",[3,0.498,4,0.426,5,0.426,7,0.498,11,0.044,12,1.328,15,1.588,20,0.498,21,0.178,23,3,26,0.032,27,0.032,113,1.831,114,2.066,115,1.832,116,2.668,118,2.668,119,2.668,120,2.668,121,2.668,122,1.503,141,2.073,165,1.546,312,2.364,405,2.397,406,2.949,407,2.949,408,2.949,409,2.949,410,2.949,411,2.949,412,2.949]],["title/injectables/JwtStrategy.html",[89,1.178,97,1.505]],["body/injectables/JwtStrategy.html",[3,0.532,4,0.455,5,0.455,7,0.532,8,1.695,11,0.046,12,1.048,14,1.291,16,1.03,17,0.904,20,0.532,21,0.19,24,1.291,26,0.033,27,0.033,75,1.649,89,1.695,90,1.88,97,2.164,100,1.88,104,2.17,122,0.904,178,3.179,201,1.649,202,1.649,203,1.649,204,2.848,243,2.557,262,2.557,332,3.179,381,2.557,413,2.557,414,4.129,415,3.146,416,4.129,417,3.146,418,4.609,419,3.146,420,3.146,421,3.146,422,2.557,423,3.146,424,3.146,425,3.146,426,3.146,427,3.146,428,3.146,429,3.146,430,3.146,431,3.146,432,3.146]],["title/classes/UpdateBookDto.html",[21,0.174,314,1.716]],["body/classes/UpdateBookDto.html",[3,0.478,4,0.409,5,0.409,7,0.478,11,0.044,12,1.337,15,1.578,20,0.478,21,0.171,23,3.007,26,0.031,27,0.031,113,1.781,114,2.024,115,1.794,116,2.613,117,2.291,118,2.613,119,2.613,120,2.613,121,2.613,122,1.513,141,2.458,165,1.484,314,2.3,433,2.301,434,2.831,435,2.831,436,2.831,437,2.831,438,2.831,439,2.831,440,2.831,441,2.831]],["title/coverage.html",[442,2.679]],["body/coverage.html",[0,1.848,1,1.794,5,0.434,6,2.44,11,0.046,18,1.389,21,0.303,26,0.032,27,0.032,44,1.094,46,1.643,51,1.459,53,2.098,75,1.573,89,1.848,91,2.44,97,1.573,110,2.07,112,2.44,122,0.862,164,1.389,166,2.44,175,2.44,298,4.556,302,2.44,312,1.794,314,1.794,331,2.44,356,2.76,405,2.44,413,2.44,433,2.44,442,2.07,443,3.001,444,3.001,445,3.001,446,3.001,447,3.001,448,4.503,449,4.003,450,3.001,451,4.503,452,3.001,453,4.003,454,3.001,455,2.44,456,3.001,457,2.44,458,3.001,459,3.001,460,3.001]],["title/dependencies.html",[31,1.594,461,1.962]],["body/dependencies.html",[11,0.047,17,0.984,26,0.035,27,0.035,31,1.586,49,1.795,57,2.047,58,3.009,100,2.047,104,2.363,153,2.047,156,2.363,252,3.009,387,2.785,422,3.547,462,4.801,463,3.426,464,3.426,465,3.426,466,3.426,467,3.426,468,3.426,469,3.426,470,3.426,471,3.426,472,3.426,473,3.426,474,3.426,475,3.426,476,3.426,477,3.426,478,3.426,479,3.426,480,3.426,481,3.426,482,3.426,483,3.426,484,3.426,485,3.426]],["title/miscellaneous/functions.html",[486,1.443,487,2.799]],["body/miscellaneous/functions.html",[7,0.725,11,0.04,26,0.04,27,0.04,455,3.489,457,4.309,486,2.565,487,3.489,488,4.293]],["title/index.html",[7,0.408,489,2.414,490,2.414]],["body/index.html",[4,0.435,11,0.045,26,0.032,27,0.032,57,2.696,114,1.394,115,1.236,334,2.448,442,2.077,491,3.012,492,3.012,493,4.012,494,3.012,495,3.012,496,3.012,497,3.012,498,3.012,499,3.012,500,3.012,501,3.012,502,3.012,503,5.259,504,3.012,505,3.012,506,3.012,507,5.152,508,3.012,509,3.012,510,4.012,511,3.012,512,3.012,513,3.012,514,3.012,515,4.012,516,4.012,517,3.012,518,3.012,519,3.012,520,4.012,521,4.012,522,3.012,523,3.012,524,3.012,525,3.012,526,3.012,527,2.448,528,3.012,529,3.012,530,3.012,531,3.012,532,3.012,533,3.012,534,3.012,535,3.012,536,3.012,537,3.012,538,3.012,539,3.012,540,3.012,541,3.012,542,3.012,543,3.012,544,2.448]],["title/modules.html",[30,1.798]],["body/modules.html",[11,0.039,26,0.039,27,0.039,29,2.465,30,1.91,35,2.162,36,2.162,527,4.238,545,5.214,546,5.214,547,5.214]],["title/overview.html",[548,3.158]],["body/overview.html",[2,1.418,11,0.044,18,2.231,26,0.035,27,0.035,29,3.286,30,1.599,31,2.03,32,2.807,33,2.807,34,2.807,35,2.742,36,2.742,37,2.621,38,2.064,39,2.064,44,1.757,90,2.064,95,2.807,96,2.807,97,2.525,111,2.382,165,1.81,301,2.807,326,2.807,327,2.807,548,2.807,549,4.819,550,3.454]],["title/properties.html",[113,1.594,461,1.962]],["body/properties.html",[11,0.045,26,0.04,27,0.04,113,1.957,114,1.957,115,1.736,544,3.437,551,4.228,552,4.228,553,4.228]],["title/miscellaneous/variables.html",[486,1.443,554,2.799]],["body/miscellaneous/variables.html",[7,0.69,11,0.043,26,0.039,27,0.039,53,2.549,75,2.141,356,2.818,373,3.321,374,3.321,399,3.321,400,3.321,401,3.321,402,3.321,403,3.321,404,3.321,486,2.442,554,3.321,555,4.086]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":298,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["0.0.1",{"_index":552,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":301,"title":{"controllers/BooksController-1.html":{}},"body":{"overview.html":{}}}],["1.9.1",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["2.18.1",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{}}}],["201",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["3",{"_index":549,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["4.6.2",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["403",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{}}}],["5",{"_index":550,"title":{},"body":{"overview.html":{}}}],["592",{"_index":162,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["592})@column",{"_index":146,"title":{},"body":{"entities/Book.html":{}}}],["6.2.1",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["99",{"_index":158,"title":{},"body":{"entities/Book.html":{}}}],["99})@primarygeneratedcolumn",{"_index":142,"title":{},"body":{"entities/Book.html":{}}}],["actualizado",{"_index":230,"title":{},"body":{"controllers/BooksController.html":{}}}],["actualizar",{"_index":229,"title":{},"body":{"controllers/BooksController.html":{}}}],["amazing",{"_index":528,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":248,"title":{},"body":{"controllers/BooksController.html":{}}}],["apibearerauth('access",{"_index":261,"title":{},"body":{"controllers/BooksController.html":{}}}],["apioperation",{"_index":249,"title":{},"body":{"controllers/BooksController.html":{}}}],["apiproperty",{"_index":152,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiproperty({example",{"_index":123,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["apiresponse",{"_index":250,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags",{"_index":251,"title":{},"body":{"controllers/BooksController.html":{}}}],["apitags('book",{"_index":258,"title":{},"body":{"controllers/BooksController.html":{}}}],["app",{"_index":505,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":499,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":178,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["authguard",{"_index":247,"title":{},"body":{"controllers/BooksController.html":{}}}],["authmodule",{"_index":35,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":114,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{},"properties.html":{}}}],["await",{"_index":280,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["backers",{"_index":529,"title":{},"body":{"index.html":{}}}],["body",{"_index":240,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["book",{"_index":51,"title":{"entities/Book.html":{}},"body":{"modules/AppModule.html":{},"entities/Book.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"coverage.html":{}}}],["book.entity",{"_index":255,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["bookdto",{"_index":164,"title":{"classes/BookDto.html":{}},"body":{"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"coverage.html":{}}}],["bookdto.class",{"_index":256,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["bookid",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["books",{"_index":177,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["books.controller",{"_index":329,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":257,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{}}}],["books/book.entity",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["books/books.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["books/books.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["books/books.service",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["bookscontroller",{"_index":46,"title":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["bookservice",{"_index":316,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["booksmodule",{"_index":36,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksrepository",{"_index":336,"title":{},"body":{"injectables/BooksService.html":{}}}],["booksservice",{"_index":44,"title":{"injectables/BooksService.html":{}},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["book})@apiresponse({status",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{}}}],["bootstrap",{"_index":457,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":547,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":545,"title":{},"body":{"modules.html":{}}}],["building",{"_index":494,"title":{},"body":{"index.html":{}}}],["cervantes",{"_index":160,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["cervantes'})@column",{"_index":126,"title":{},"body":{"entities/Book.html":{}}}],["class",{"_index":21,"title":{"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["classes",{"_index":165,"title":{},"body":{"classes/BookDto.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":326,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_providers",{"_index":327,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["column",{"_index":154,"title":{},"body":{"entities/Book.html":{}}}],["column('text",{"_index":137,"title":{},"body":{"entities/Book.html":{}}}],["config/.../config.service.ts",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/config.service",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["config/config.service.ts",{"_index":356,"title":{},"body":{"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.service.ts:16",{"_index":366,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:21",{"_index":368,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:4",{"_index":363,"title":{},"body":{"classes/ConfigService.html":{}}}],["config/config.service.ts:7",{"_index":372,"title":{},"body":{"classes/ConfigService.html":{}}}],["configservice",{"_index":53,"title":{"classes/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configservice(process.env).ensurevalues",{"_index":399,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["console.log(bookid",{"_index":351,"title":{},"body":{"injectables/BooksService.html":{}}}],["const",{"_index":379,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor",{"_index":332,"title":{},"body":{"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(booksrepository",{"_index":333,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(env",{"_index":361,"title":{},"body":{"classes/ConfigService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"classes/ConfigService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"coverage.html":{}}}],["controller('books",{"_index":259,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["coverage",{"_index":442,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creado",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["crear",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook",{"_index":179,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["createbook(@body",{"_index":320,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["createbook(newbook",{"_index":303,"title":{},"body":{"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["createbook(request",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{}}}],["createbook.dto",{"_index":313,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["createbookdto",{"_index":312,"title":{"classes/CreateBookDto.html":{}},"body":{"controllers/BooksController-1.html":{},"classes/CreateBookDto.html":{},"coverage.html":{}}}],["data",{"_index":279,"title":{},"body":{"controllers/BooksController.html":{}}}],["data['affected",{"_index":297,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":396,"title":{},"body":{"classes/ConfigService.html":{}}}],["date.now",{"_index":264,"title":{},"body":{"controllers/BooksController.html":{}}}],["datos",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{}}}],["dd",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["de",{"_index":125,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["debug",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["debug.log",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["default",{"_index":373,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["del",{"_index":130,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{}}}],["delete",{"_index":238,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["delete(':bookid",{"_index":295,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["delete(':bookid')@apioperation({summary",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebook",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["deletebook(@param('bookid",{"_index":322,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["deletebook(bookid",{"_index":305,"title":{},"body":{"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["deletebook(request",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":115,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":506,"title":{},"body":{"index.html":{}}}],["devuelve",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["dirname",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["don",{"_index":133,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["duration",{"_index":273,"title":{},"body":{"controllers/BooksController.html":{}}}],["e2e",{"_index":517,"title":{},"body":{"index.html":{}}}],["edición",{"_index":129,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["efficient",{"_index":495,"title":{},"body":{"index.html":{}}}],["elapsedtime",{"_index":265,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminado",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{}}}],["eliminar",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{}}}],["ensurevalues",{"_index":358,"title":{},"body":{"classes/ConfigService.html":{}}}],["ensurevalues(keys",{"_index":365,"title":{},"body":{"classes/ConfigService.html":{}}}],["entities",{"_index":111,"title":{},"body":{"entities/Book.html":{},"classes/ConfigService.html":{},"overview.html":{}}}],["entity",{"_index":110,"title":{"entities/Book.html":{}},"body":{"entities/Book.html":{},"coverage.html":{}}}],["env",{"_index":364,"title":{},"body":{"classes/ConfigService.html":{}}}],["env.${key",{"_index":384,"title":{},"body":{"classes/ConfigService.html":{}}}],["error",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["error(`config",{"_index":382,"title":{},"body":{"classes/ConfigService.html":{}}}],["error.log",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["específico",{"_index":287,"title":{},"body":{"controllers/BooksController.html":{}}}],["específico'})@apiresponse({status",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{}}}],["esta",{"_index":128,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["example",{"_index":157,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["exports",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["express",{"_index":252,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"dependencies.html":{}}}],["extends",{"_index":424,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":420,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":428,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["filename",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["findall",{"_index":181,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["findall(@req",{"_index":278,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["findall(params",{"_index":339,"title":{},"body":{"injectables/BooksService.html":{}}}],["findall(request",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["findbook",{"_index":182,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["findbook(@param('bookid",{"_index":318,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["findbook(bookid",{"_index":308,"title":{},"body":{"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["findbook(request",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["finishtime",{"_index":263,"title":{},"body":{"controllers/BooksController.html":{}}}],["forbidden",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{}}}],["format",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":291,"title":{},"body":{"controllers/BooksController.html":{}}}],["framework",{"_index":493,"title":{},"body":{"index.html":{}}}],["function",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":487,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genre",{"_index":116,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["get(':bookid",{"_index":286,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["get(':bookid')@apioperation({summary",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{}}}],["get()@apioperation({summary",{"_index":214,"title":{},"body":{"controllers/BooksController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":489,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":359,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue",{"_index":360,"title":{},"body":{"classes/ConfigService.html":{}}}],["getvalue(key",{"_index":370,"title":{},"body":{"classes/ConfigService.html":{}}}],["grow",{"_index":524,"title":{},"body":{"index.html":{}}}],["hello",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":535,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["hidalgo",{"_index":132,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["host",{"_index":388,"title":{},"body":{"classes/ConfigService.html":{}}}],["httpexception",{"_index":423,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpexception('invalid",{"_index":431,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["https://nestjs.com",{"_index":541,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":243,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["httpstatus.created",{"_index":292,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.ok",{"_index":283,"title":{},"body":{"controllers/BooksController.html":{}}}],["httpstatus.unauthorized",{"_index":432,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":117,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/UpdateBookDto.html":{}}}],["identifier",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["image_url",{"_index":118,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{}}}],["info.log",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["información",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{}}}],["ingenioso",{"_index":131,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["inject",{"_index":244,"title":{},"body":{"controllers/BooksController.html":{}}}],["inject(winston_module_provider",{"_index":274,"title":{},"body":{"controllers/BooksController.html":{}}}],["injectable",{"_index":89,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["injectables",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"overview.html":{}}}],["injectrepository",{"_index":344,"title":{},"body":{"injectables/BooksService.html":{}}}],["injectrepository(book",{"_index":345,"title":{},"body":{"injectables/BooksService.html":{}}}],["installation",{"_index":502,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":504,"title":{},"body":{"index.html":{}}}],["join",{"_index":531,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":427,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtstrategy",{"_index":97,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":378,"title":{},"body":{"classes/ConfigService.html":{}}}],["kamil",{"_index":538,"title":{},"body":{"index.html":{}}}],["key",{"_index":375,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys",{"_index":367,"title":{},"body":{"classes/ConfigService.html":{}}}],["keys.foreach(k",{"_index":385,"title":{},"body":{"classes/ConfigService.html":{}}}],["la",{"_index":135,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["level",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{}}}],["libro",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["libro'})@apiresponse({status",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{}}}],["libros'})@apiresponse({status",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["license",{"_index":544,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":521,"title":{},"body":{"index.html":{}}}],["lista",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["literal",{"_index":362,"title":{},"body":{"classes/ConfigService.html":{}}}],["log/debug",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["log/error",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["log/info",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["logger",{"_index":254,"title":{},"body":{"controllers/BooksController.html":{}}}],["mancha",{"_index":136,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["mancha'})@column",{"_index":150,"title":{},"body":{"entities/Book.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":267,"title":{},"body":{"controllers/BooksController.html":{}}}],["metadata",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":268,"title":{},"body":{"controllers/BooksController.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["miguel",{"_index":124,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["miscellaneous",{"_index":486,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":383,"title":{},"body":{"classes/ConfigService.html":{}}}],["mit",{"_index":520,"title":{},"body":{"index.html":{}}}],["mm",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["mode",{"_index":510,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":534,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":387,"title":{},"body":{"classes/ConfigService.html":{},"dependencies.html":{}}}],["myśliwiec",{"_index":539,"title":{},"body":{"index.html":{}}}],["name",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["nest",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":543,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/common/decorators",{"_index":246,"title":{},"body":{"controllers/BooksController.html":{}}}],["nestjs/core",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":153,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"dependencies.html":{}}}],["new",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newbook",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["node.js",{"_index":492,"title":{},"body":{"index.html":{}}}],["novela",{"_index":159,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["novela'})@column",{"_index":139,"title":{},"body":{"entities/Book.html":{}}}],["npm",{"_index":503,"title":{},"body":{"index.html":{}}}],["number",{"_index":141,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["object.assign(toupdate",{"_index":354,"title":{},"body":{"injectables/BooksService.html":{}}}],["obtener",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["ok",{"_index":285,"title":{},"body":{"controllers/BooksController.html":{}}}],["open",{"_index":522,"title":{},"body":{"index.html":{}}}],["optional",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["out",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["overview",{"_index":548,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":461,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":119,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["param",{"_index":241,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["param('bookid",{"_index":288,"title":{},"body":{"controllers/BooksController.html":{}}}],["parameters",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["params",{"_index":341,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(bookid",{"_index":348,"title":{},"body":{"injectables/BooksService.html":{}}}],["parseint(this.getvalue('tutorial_port",{"_index":391,"title":{},"body":{"classes/ConfigService.html":{}}}],["passport",{"_index":422,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":419,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":425,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":394,"title":{},"body":{"classes/ConfigService.html":{}}}],["path",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["path.join(__dirname",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":418,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":532,"title":{},"body":{"index.html":{}}}],["port",{"_index":390,"title":{},"body":{"classes/ConfigService.html":{}}}],["post",{"_index":237,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["post()@apioperation({summary",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{}}}],["prefix",{"_index":176,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["primarygeneratedcolumn",{"_index":155,"title":{},"body":{"entities/Book.html":{}}}],["private",{"_index":275,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{}}}],["production",{"_index":512,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":491,"title":{},"body":{"index.html":{}}}],["project",{"_index":523,"title":{},"body":{"index.html":{}}}],["promise",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/JwtStrategy.html":{}}}],["properties",{"_index":113,"title":{"properties.html":{}},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{},"properties.html":{}}}],["property",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{}}}],["public",{"_index":357,"title":{},"body":{"classes/ConfigService.html":{}}}],["publisher",{"_index":120,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["put",{"_index":239,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["put(':bookid",{"_index":299,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["put(':bookid')@apioperation({summary",{"_index":228,"title":{},"body":{"controllers/BooksController.html":{}}}],["quijote",{"_index":134,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["read",{"_index":533,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["reflect",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":334,"title":{},"body":{"injectables/BooksService.html":{},"index.html":{}}}],["req",{"_index":242,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["request",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{}}}],["request['method",{"_index":269,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['url",{"_index":271,"title":{},"body":{"controllers/BooksController.html":{}}}],["request['user'].username",{"_index":272,"title":{},"body":{"controllers/BooksController.html":{}}}],["require('dotenv').config",{"_index":377,"title":{},"body":{"classes/ConfigService.html":{}}}],["res",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.created).json",{"_index":294,"title":{},"body":{"controllers/BooksController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":284,"title":{},"body":{"controllers/BooksController.html":{}}}],["reset",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["run",{"_index":507,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["santillana",{"_index":161,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["santillana'})@column",{"_index":148,"title":{},"body":{"entities/Book.html":{}}}],["scalable",{"_index":496,"title":{},"body":{"index.html":{}}}],["secret",{"_index":430,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secretorkey",{"_index":429,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":497,"title":{},"body":{"index.html":{}}}],["session",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["side",{"_index":498,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":225,"title":{},"body":{"controllers/BooksController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"index.html":{}}}],["specified",{"_index":290,"title":{},"body":{"controllers/BooksController.html":{}}}],["sponsors",{"_index":526,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":91,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["src/books/book.class.ts",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["src/books/book.entity",{"_index":376,"title":{},"body":{"classes/ConfigService.html":{}}}],["src/books/book.entity.ts",{"_index":112,"title":{},"body":{"entities/Book.html":{},"coverage.html":{}}}],["src/books/book.entity.ts:12",{"_index":151,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:16",{"_index":140,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:22",{"_index":138,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:26",{"_index":127,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:30",{"_index":149,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:34",{"_index":147,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:38",{"_index":145,"title":{},"body":{"entities/Book.html":{}}}],["src/books/book.entity.ts:8",{"_index":143,"title":{},"body":{"entities/Book.html":{}}}],["src/books/bookdto.class.ts",{"_index":166,"title":{},"body":{"classes/BookDto.html":{},"coverage.html":{}}}],["src/books/bookdto.class.ts:13",{"_index":168,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:15",{"_index":167,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:17",{"_index":173,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:19",{"_index":172,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:21",{"_index":171,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:4",{"_index":170,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:7",{"_index":174,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/bookdto.class.ts:9",{"_index":169,"title":{},"body":{"classes/BookDto.html":{}}}],["src/books/books.controller.ts",{"_index":175,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:108",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:136",{"_index":231,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:17",{"_index":234,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:39",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:58",{"_index":226,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:86",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.dto.ts",{"_index":302,"title":{},"body":{"controllers/BooksController-1.html":{},"coverage.html":{}}}],["src/books/books.dto.ts:12",{"_index":307,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["src/books/books.dto.ts:16",{"_index":309,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["src/books/books.dto.ts:20",{"_index":304,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["src/books/books.dto.ts:26",{"_index":306,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["src/books/books.dto.ts:30",{"_index":311,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["src/books/books.module.ts",{"_index":328,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":331,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:15",{"_index":340,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:19",{"_index":342,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:23",{"_index":337,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:27",{"_index":338,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:31",{"_index":343,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:9",{"_index":335,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/createbook.dto.ts",{"_index":405,"title":{},"body":{"classes/CreateBookDto.html":{},"coverage.html":{}}}],["src/books/createbook.dto.ts:2",{"_index":412,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:3",{"_index":408,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:4",{"_index":407,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:5",{"_index":406,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:6",{"_index":411,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:7",{"_index":410,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/createbook.dto.ts:8",{"_index":409,"title":{},"body":{"classes/CreateBookDto.html":{}}}],["src/books/updatebook.dto.ts",{"_index":433,"title":{},"body":{"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["src/books/updatebook.dto.ts:2",{"_index":437,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:3",{"_index":441,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:4",{"_index":436,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:5",{"_index":435,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:6",{"_index":434,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:7",{"_index":440,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:8",{"_index":439,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/books/updatebook.dto.ts:9",{"_index":438,"title":{},"body":{"classes/UpdateBookDto.html":{}}}],["src/main.ts",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utilities/auth.module.ts",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/utilities/jwt.strategy.ts",{"_index":413,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/utilities/jwt.strategy.ts:14",{"_index":417,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/utilities/jwt.strategy.ts:6",{"_index":415,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["stack",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["start",{"_index":508,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":511,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":513,"title":{},"body":{"index.html":{}}}],["started",{"_index":490,"title":{"index.html":{}},"body":{}}],["starter",{"_index":501,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":235,"title":{},"body":{"controllers/BooksController.html":{}}}],["statements",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":277,"title":{},"body":{"controllers/BooksController.html":{}}}],["statuscode",{"_index":233,"title":{},"body":{"controllers/BooksController.html":{}}}],["stay",{"_index":536,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":421,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["summary",{"_index":276,"title":{},"body":{"controllers/BooksController.html":{}}}],["super",{"_index":426,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":527,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":546,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":398,"title":{},"body":{"classes/ConfigService.html":{}}}],["table",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":516,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":519,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":518,"title":{},"body":{"index.html":{}}}],["tests",{"_index":515,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":525,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bookservice.createbook(newbook",{"_index":321,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["this.bookservice.deletebook(bookid",{"_index":323,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["this.bookservice.findall(request.query",{"_index":317,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["this.bookservice.findbook(bookid",{"_index":319,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["this.bookservice.updatebook(bookid",{"_index":325,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["this.booksrepository.delete",{"_index":350,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.find",{"_index":346,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.findone",{"_index":347,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(newbook",{"_index":349,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksrepository.save(updated",{"_index":355,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.booksservice.createbook(newbook",{"_index":293,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.deletebook(bookid",{"_index":296,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findall(request.query",{"_index":281,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.findbook(bookid",{"_index":289,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.booksservice.updatebook(bookid",{"_index":300,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.env[key",{"_index":380,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_database",{"_index":397,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_host",{"_index":389,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_password",{"_index":395,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue('tutorial_user",{"_index":393,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.getvalue(k",{"_index":386,"title":{},"body":{"classes/ConfigService.html":{}}}],["this.logger.log",{"_index":266,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.writelog(starttime",{"_index":282,"title":{},"body":{"controllers/BooksController.html":{}}}],["throw",{"_index":381,"title":{},"body":{"classes/ConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["throwonmissing",{"_index":371,"title":{},"body":{"classes/ConfigService.html":{}}}],["title",{"_index":121,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"classes/CreateBookDto.html":{},"classes/UpdateBookDto.html":{}}}],["token",{"_index":262,"title":{},"body":{"controllers/BooksController.html":{},"injectables/JwtStrategy.html":{}}}],["touch",{"_index":537,"title":{},"body":{"index.html":{}}}],["toupdate",{"_index":352,"title":{},"body":{"injectables/BooksService.html":{}}}],["transports",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"classes/ConfigService.html":{}}}],["tutorial_database",{"_index":404,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_host",{"_index":400,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_password",{"_index":403,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_port",{"_index":401,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["tutorial_user",{"_index":402,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":542,"title":{},"body":{"index.html":{}}}],["type",{"_index":122,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{},"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{},"classes/ConfigService.html":{},"classes/CreateBookDto.html":{},"injectables/JwtStrategy.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["typeorm",{"_index":156,"title":{},"body":{"entities/Book.html":{},"injectables/BooksService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([book",{"_index":330,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forroot(configservice.gettypeormconfig()),booksmodule,authmodule,winstonmodule.forroot",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":369,"title":{},"body":{"classes/ConfigService.html":{}}}],["typescript",{"_index":500,"title":{},"body":{"index.html":{}}}],["ui",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{}}}],["undefined",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{},"classes/ConfigService.html":{}}}],["unit",{"_index":514,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":553,"title":{},"body":{"properties.html":{}}}],["updatebook",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["updatebook(@param('bookid",{"_index":324,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["updatebook(bookid",{"_index":310,"title":{},"body":{"controllers/BooksController-1.html":{},"injectables/BooksService.html":{}}}],["updatebook(request",{"_index":227,"title":{},"body":{"controllers/BooksController.html":{}}}],["updatebook.dto",{"_index":315,"title":{},"body":{"controllers/BooksController-1.html":{}}}],["updatebookdto",{"_index":314,"title":{"classes/UpdateBookDto.html":{}},"body":{"controllers/BooksController-1.html":{},"classes/UpdateBookDto.html":{},"coverage.html":{}}}],["updated",{"_index":353,"title":{},"body":{"injectables/BooksService.html":{}}}],["url",{"_index":270,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards",{"_index":245,"title":{},"body":{"controllers/BooksController.html":{}}}],["useguards(authguard('jwt",{"_index":260,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"controllers/BooksController.html":{}}}],["username",{"_index":392,"title":{},"body":{"classes/ConfigService.html":{}}}],["utilities/auth.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["validate",{"_index":414,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":416,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["value",{"_index":374,"title":{},"body":{"classes/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":554,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":551,"title":{},"body":{"properties.html":{}}}],["void",{"_index":236,"title":{},"body":{"controllers/BooksController.html":{}}}],["watch",{"_index":509,"title":{},"body":{"index.html":{}}}],["website",{"_index":540,"title":{},"body":{"index.html":{}}}],["winston",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"dependencies.html":{}}}],["winston.format.combine",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.errors",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.json",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.splat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.format.timestamp",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.console",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["winston.transports.file",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["winston_module_provider",{"_index":253,"title":{},"body":{"controllers/BooksController.html":{}}}],["winstonmodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["world",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["writelog",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{}}}],["writelog(starttime",{"_index":232,"title":{},"body":{"controllers/BooksController.html":{}}}],["www.imagen.com/quijote.png",{"_index":163,"title":{},"body":{"entities/Book.html":{},"classes/BookDto.html":{}}}],["www.imagen.com/quijote.png'})@column",{"_index":144,"title":{},"body":{"entities/Book.html":{}}}],["you'd",{"_index":530,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["zoom",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BooksModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBooksModule\n\nBooksModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BooksModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BooksService } from './books/books.service';\nimport { BooksController } from './books/books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { BooksModule } from './books/books.module';\nimport { Book } from './books/book.entity';\nimport { configService } from 'config/config.service';\nimport { AuthModule } from './utilities/auth.module';\nimport { WinstonModule } from 'nest-winston'; \nimport * as winston from 'winston';\nimport * as path from 'path';\n\n@Module({\n  imports: [TypeOrmModule.forRoot(configService.getTypeOrmConfig()),BooksModule,AuthModule,WinstonModule.forRoot({\n    level: 'info', \n    format: winston.format.combine( \n      winston.format.timestamp({\n        format: 'YYYY-MM-DD HH:mm:ss',\n      }),\n      winston.format.errors({ stack: true }),\n      winston.format.splat(),\n      winston.format.json(),\n    ),\n    transports: [ \n      new winston.transports.File({\n        dirname: path.join(__dirname, './../log/debug/'),\n        filename: 'debug.log',\n        level: 'debug',\n      }),\n      new winston.transports.File({\n        dirname: path.join(__dirname, './../log/error/'),\n        filename: 'error.log',\n        level: 'error',\n      }),\n      new winston.transports.File({\n        dirname: path.join(__dirname, './../log/info/'),\n        filename: 'info.log',\n        level: 'info',\n      }),\n      new winston.transports.Console({ level: 'debug' }),\n    ],\n  }),\n],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtStrategy } from './jwt.strategy';\n@Module({\n    imports: [\n        PassportModule.register({\n            defaultStrategy: 'jwt',\n            property: 'user',\n            session: false,\n        }),\n    ],\n    controllers: [],\n    providers: [JwtStrategy],\n    exports: [PassportModule],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Book.html":{"url":"entities/Book.html","title":"entity - Book","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/book.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                author\n                            \n                            \n                                description\n                            \n                            \n                                genre\n                            \n                            \n                                id\n                            \n                            \n                                image_url\n                            \n                            \n                                pages\n                            \n                            \n                                publisher\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})@Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 99})@PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/book.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Book {\n    @ApiProperty({ example: 99 })\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @ApiProperty({ example: 'Don Quijote de la Mancha' })\n    @Column()\n    title: string;\n\n    @ApiProperty({ example: 'Novela' })\n    @Column()\n    genre: string;\n\n    @ApiProperty({\n        example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n    })\n    @Column('text')\n    description: string;\n\n    @ApiProperty({ example: 'Miguel de Cervantes' })\n    @Column()\n    author: string;\n\n    @ApiProperty({ example: 'Santillana' })\n    @Column()\n    publisher: string;\n\n    @ApiProperty({ example: 592 })\n    @Column()\n    pages: number;\n\n    @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n    @Column()\n    image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookDto.html":{"url":"classes/BookDto.html","title":"class - BookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/bookDto.class.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Miguel de Cervantes'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Novela'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'www.imagen.com/quijote.png'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 592})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Santillana'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Don Quijote de la Mancha'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/bookDto.class.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class BookDto {\n   readonly id: number;\n\n   @ApiProperty({ example: 'Don Quijote de la Mancha' })\n   readonly title: string;\n   @ApiProperty({ example: 'Novela' })\n   readonly genre: string;\n   @ApiProperty({\n      example: 'Esta edición del Ingenioso hidalgo don Quijote de la Mancha ...',\n   })\n   readonly description: string;\n   @ApiProperty({ example: 'Miguel de Cervantes' })\n   readonly author: string;\n   @ApiProperty({ example: 'Santillana' })\n   readonly publisher: string;\n   @ApiProperty({ example: 592 })\n   readonly pages: number;\n   @ApiProperty({ example: 'www.imagen.com/quijote.png' })\n   readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                            \n                                writeLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBook(request: Request, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Crear un libro'})@ApiResponse({status: undefined, description: 'Datos del libro creado', type: Book})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')@ApiOperation({summary: 'Eliminar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro eliminado'})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: Request, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Obtener lista de libros'})@ApiResponse({status: 201, description: 'Lista de libros', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(request: Request, bookId: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')@ApiOperation({summary: 'Devuelve información sobre un libro específico'})@ApiResponse({status: undefined, description: 'Datos del libro', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(request: Request, bookId: string, newBook: BookDto, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')@ApiOperation({summary: 'Actualizar un libro específico'})@ApiResponse({status: 200, description: 'Datos del libro actualizado', type: Book})\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeLog\n                        \n                    \n                \n            \n            \n                \nwriteLog(startTime: any, request: any, statusCode: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    statusCode\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Delete, Put, Body, Param, Req, HttpStatus } from '@nestjs/common';\nimport { Inject, Res, UseGuards } from '@nestjs/common/decorators';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { WINSTON_MODULE_PROVIDER } from 'nest-winston';\nimport { Logger } from 'winston';\nimport { Book } from './book.entity';\nimport { BookDto } from './bookDto.class';\nimport { BooksService } from './books.service';\n\n@ApiTags('book')\n@Controller('books')\n// @UseGuards(AuthGuard('jwt'))\n// @ApiBearerAuth('access-token')\nexport class BooksController {\n    writeLog(startTime: any, request: any, statusCode: number) {\n        let finishTime = Date.now();\n        let elapsedTime = finishTime - startTime;\n\n        this.logger.log({\n            level: 'info',\n            message: '',\n            statusCode: statusCode,\n            method: request['method'],\n            url: request['url'],\n            //   user: request['user'].username,\n            duration: elapsedTime,\n        });\n    }\n    constructor(private booksService: BooksService, @Inject(WINSTON_MODULE_PROVIDER) private readonly logger: Logger,) { }\n    @Get()\n    @ApiOperation({ summary: 'Obtener lista de libros' })\n    @ApiResponse({\n        status: 201,\n        description: 'Lista de libros',\n        type: Book,\n    })\n    async findAll(@Req() request: Request, @Res() res): Promise {\n        let startTime = Date.now();\n        let data = await this.booksService.findAll(request.query);\n\n        this.writeLog(startTime, request, HttpStatus.OK);\n        return res.status(HttpStatus.OK).json({\n            statusCode: HttpStatus.OK,\n            message: 'OK',\n            data: data,\n        });\n    }\n\n    @Get(':bookId')\n    @ApiOperation({ summary: 'Devuelve información sobre un libro específico' })\n    @ApiResponse({\n        status: HttpStatus.OK,\n        description: 'Datos del libro',\n        type: Book,\n    })\n    async findBook(\n        @Req() request: Request,\n        @Param('bookId') bookId: string,\n        @Res() res,\n    ): Promise {\n        let message = 'OK';\n        let startTime = Date.now();\n        let data = await this.booksService.findBook(bookId);\n\n        if (!data) {\n            message = 'A book with the specified id was not found';\n        }\n\n        this.writeLog(startTime, request, HttpStatus.OK);\n        return res.status(HttpStatus.OK).json({\n            statusCode: HttpStatus.OK,\n            message: message,\n            data: data,\n        });\n    }\n    @Post()\n    @ApiOperation({ summary: 'Crear un libro' })\n    @ApiResponse({\n        status: HttpStatus.CREATED,\n        description: 'Datos del libro creado',\n        type: Book,\n    })\n    @ApiResponse({ status: 403, description: 'Forbidden.' })\n    async createBook(\n        @Req() request: Request,\n        @Body() newBook: BookDto,\n        @Res() res,\n    ): Promise {\n        let startTime = Date.now();\n        let data = await this.booksService.createBook(newBook);\n\n        this.writeLog(startTime, request, HttpStatus.CREATED);\n        return res.status(HttpStatus.CREATED).json({\n            statusCode: HttpStatus.CREATED,\n            message: 'OK',\n            data: data,\n        });\n    }\n\n    @Delete(':bookId')\n    @ApiOperation({ summary: 'Eliminar un libro específico' })\n    @ApiResponse({\n        status: 200,\n        description: 'Datos del libro eliminado',\n    })\n    async deleteBook(\n        @Req() request: Request,\n        @Param('bookId') bookId: string,\n        @Res() res,\n    ): Promise {\n        let message = 'OK';\n        let startTime = Date.now();\n        let data = await this.booksService.deleteBook(bookId);\n\n        if (data['affected'] == 0) {\n            message = 'A book with the specified id was not found';\n            data = {};\n        }\n\n        this.writeLog(startTime, request, HttpStatus.OK);\n        return res.status(HttpStatus.OK).json({\n            statusCode: HttpStatus.OK,\n            message: message,\n            data: data,\n        });\n    }\n    @Put(':bookId')\n    @ApiOperation({ summary: 'Actualizar un libro específico' })\n    @ApiResponse({\n        status: 200,\n        description: 'Datos del libro actualizado',\n        type: Book,\n    })\n    async updateBook(\n        @Req() request: Request,\n        @Param('bookId') bookId: string,\n        @Body() newBook: BookDto,\n        @Res() res,\n    ): Promise {\n        let message = 'OK';\n        let startTime = Date.now();\n        let data = await this.booksService.updateBook(bookId, newBook);\n\n        if (!data) {\n            message = 'A book with the specified id was not found';\n        }\n\n        this.writeLog(startTime, request, HttpStatus.OK);\n        return res.status(HttpStatus.OK).json({\n            statusCode: HttpStatus.OK,\n            message: message,\n            data: data,\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController-1.html":{"url":"controllers/BooksController-1.html","title":"controller - BooksController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.dto.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createBook\n                            \n                            \n                                deleteBook\n                            \n                            \n                                findAll\n                            \n                            \n                                findBook\n                            \n                            \n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createBook\n                        \n                    \n                \n            \n            \n                \ncreateBook(newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/books/books.dto.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBook\n                        \n                    \n                \n            \n            \n                \ndeleteBook(bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':bookId')\n                \n            \n\n            \n                \n                    Defined in src/books/books.dto.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/books/books.dto.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findBook\n                        \n                    \n                \n            \n            \n                \nfindBook(bookId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':bookId')\n                \n            \n\n            \n                \n                    Defined in src/books/books.dto.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateBook\n                        \n                    \n                \n            \n            \n                \nupdateBook(bookId: string, newBook: BookDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':bookId')\n                \n            \n\n            \n                \n                    Defined in src/books/books.dto.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Delete, Put, Body, Param, Req } from '@nestjs/common';\nimport { Request } from 'express';\nimport { BookDto } from './bookDto.class';\nimport { BooksService } from './books.service';\nimport { CreateBookDto } from './CreateBook.dto';\nimport { UpdateBookDto } from './UpdateBook.dto';\n\n@Controller('books')\nexport class BooksController {\n    constructor(private bookService: BooksService) { }\n    @Get()\n    findAll(@Req() request: Request) {\n        return this.bookService.findAll(request.query);\n    }\n    @Get(':bookId')\n    findBook(@Param('bookId') bookId: string) {\n        return this.bookService.findBook(bookId);\n    }\n    @Post()\n    createBook(@Body() newBook: BookDto) {\n        // let newBook: any = body;\n        return this.bookService.createBook(newBook)\n    }\n\n    @Delete(':bookId')\n    deleteBook(@Param('bookId') bookId: string) {\n        return this.bookService.deleteBook(bookId)\n    }\n    @Put(':bookId')\n    updateBook(@Param('bookId') bookId: string, @Body() newBook: BookDto) {\n        // let newBook: any = body;\n        return this.bookService.updateBook(bookId, newBook)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksService\n\nBooksService\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Book } from './book.entity';\nimport { BooksService } from './books.service';\nimport { BooksController } from './books.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Book])], \n  providers: [BooksService], \n  controllers: [BooksController], \n})\nexport class BooksModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createBook\n                            \n                            \n                                    Async\n                                deleteBook\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findBook\n                            \n                            \n                                    Async\n                                updateBook\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(booksRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        booksRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    createBook(newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(params)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    findBook(bookId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateBook\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateBook(bookId: string, newBook: BookDto)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newBook\n                                    \n                                                BookDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { BookDto } from './bookDto.class';\nimport { Book } from './book.entity';\nimport { InjectRepository} from '@nestjs/typeorm';\nimport { Repository } from 'typeorm'; \n\n\n@Injectable()\nexport class BooksService {\n\n  constructor(\n    @InjectRepository(Book) private booksRepository: Repository, \n  ) {}\n\n  async findAll(params): Promise { \n    return await this.booksRepository.find(); \n  }\n\n  async findBook(bookId: string): Promise {\n    return await this.booksRepository.findOne({ where: { id: parseInt(bookId) } }); \n  }\n\n  async createBook(newBook: BookDto): Promise {\n    return this.booksRepository.save(newBook);\n  }\n\n  async deleteBook(bookId: string): Promise {\n    return await this.booksRepository.delete({ id: parseInt(bookId) });\n  }\n\n  async updateBook(bookId: string, newBook: BookDto): Promise { \n    console.log(bookId)\n    let toUpdate =  await this.booksRepository.findOne({ where: { id: parseInt(bookId) } }); \n\n    let updated = Object.assign(toUpdate, newBook); \n\n    return this.booksRepository.save(updated); \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConfigService.html":{"url":"classes/ConfigService.html","title":"class - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            config/config.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ensureValues\n                            \n                            \n                                    Public\n                                getTypeOrmConfig\n                            \n                            \n                                    Private\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(env: literal type)\n                    \n                \n                        \n                            \n                                Defined in config/config.service.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        env\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ensureValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureValues(keys: string[])\n                \n            \n\n\n            \n                \n                    Defined in config/config.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    keys\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     this\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getTypeOrmConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTypeOrmConfig()\n                \n            \n\n\n            \n                \n                    Defined in config/config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(key: string, throwOnMissing)\n                \n            \n\n\n            \n                \n                    Defined in config/config.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    throwOnMissing\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TypeOrmModuleOptions } from \"@nestjs/typeorm\";\nimport { Book } from \"src/books/book.entity\";\nrequire('dotenv').config();\nclass ConfigService {\n  constructor(private env: { [k: string]: string | undefined }) { }\n\n  private getValue(key: string, throwOnMissing = true): string {\n    const value = this.env[key];\n    if (!value && throwOnMissing) {\n      throw new Error(`config error - missing env.${key}`);\n    }\n\n    return value;\n  }\n\n  public ensureValues(keys: string[]) {\n    keys.forEach(k => this.getValue(k, true));\n    return this;\n  }\n\n  public getTypeOrmConfig(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n\n      host: this.getValue('TUTORIAL_HOST'),\n      port: parseInt(this.getValue('TUTORIAL_PORT')),\n      username: this.getValue('TUTORIAL_USER'),\n      password: this.getValue('TUTORIAL_PASSWORD'),\n      database: this.getValue('TUTORIAL_DATABASE'),\n\n      entities: [Book],\n      synchronize: true,\n    };\n  }\n}\n\nconst configService = new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n]);\n\nexport { configService };\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBookDto.html":{"url":"classes/CreateBookDto.html","title":"class - CreateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/CreateBook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/CreateBook.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBookDto {\n    readonly title: string;\n    readonly genre: string;\n    readonly description: string;\n    readonly author: string;\n    readonly publisher: string;\n    readonly pages: number;\n    readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/utilities/jwt.strategy.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/jwt.strategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor() {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: 'secret',\n        });\n    }\n\n    async validate(payload: any): Promise {\n        if (!payload) {\n            throw new HttpException('Invalid token', HttpStatus.UNAUTHORIZED);\n        }\n        return payload;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBookDto.html":{"url":"classes/UpdateBookDto.html","title":"class - UpdateBookDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBookDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/UpdateBook.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                author\n                            \n                            \n                                    Readonly\n                                description\n                            \n                            \n                                    Readonly\n                                genre\n                            \n                            \n                                    Readonly\n                                id\n                            \n                            \n                                    Readonly\n                                image_url\n                            \n                            \n                                    Readonly\n                                pages\n                            \n                            \n                                    Readonly\n                                publisher\n                            \n                            \n                                    Readonly\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        author\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        genre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        image_url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        publisher\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/books/UpdateBook.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdateBookDto {\n    readonly id: number;\n    readonly title: string;\n    readonly genre: string;\n    readonly description: string;\n    readonly author: string;\n    readonly publisher: string;\n    readonly pages: number;\n    readonly image_url: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                config/config.service.ts\n            \n            class\n            ConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                config/config.service.ts\n            \n            variable\n            configService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/books/CreateBook.dto.ts\n            \n            class\n            CreateBookDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/books/UpdateBook.dto.ts\n            \n            class\n            UpdateBookDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.class.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/book.entity.ts\n            \n            entity\n            Book\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books/bookDto.class.ts\n            \n            class\n            BookDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/books.dto.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            mysql : ^2.18.1\n        \n            nest-winston : ^1.9.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBooksModule\n\nBooksModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            configService   (config/.../config.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    config/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigService(process.env).ensureValues([\n  'TUTORIAL_HOST',\n  'TUTORIAL_PORT',\n  'TUTORIAL_USER',\n  'TUTORIAL_PASSWORD',\n  'TUTORIAL_DATABASE',\n])\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
